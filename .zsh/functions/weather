#!/usr/bin/env zsh

function weather() {
typeset locate="default"
typeset fetch=false

help(){
    echo 'usage: weather [-h | --help] [-f | --fetch] [<location>]'
    echo ''
    echo 'Supported locations:'
    echo '\tparis\t\t\t# city name'
    echo '\tmuc\t\t\t# airport code (3 letters)'
    echo '\t@stackoverflow.com\t# domain name'
    echo ''
    echo 'options:'
    echo '\t-h | --help\t\tshow this help'
    echo '\t-f | --fetch\t\tforce fetching new data from wttr.in,'
    echo '\t\t\t\twihout cached data.'
}

fetch_weather(){
    [ "$1" = "default" ] && loc="" || loc=$1
    {
        date +%s;
        curl wttr.in/$loc;
    } | tee $cache
}

for arg in $@; do
case $arg in
    -h|--help)
        help
        return;;
    -f|--fetch)
        fetch=true
        continue;;
    *)
        locate=$arg
esac
done

cache="$DOTDIR/.zsh/functions/weather.log/$locate"
if [ -e $cache ]; then
    if [ `date +%s` -ge $(expr 10800 + `head -n 1 $cache`) ]; then
        fetch=true
    fi
else
    fetch=true
fi

shellsize=`stty size <&2 | cut -d' ' -f2`
if $fetch; then
    if [ $shellsize -ge 125 ]; then
        fetch_weather $locate
    else
        fetch_weather $locate | cut -c1-$shellsize
    fi
else
    if [ $shellsize -ge 125 ]; then
        cat $cache
    else
        cat $cache | cut -c1-$shellsize
    fi
fi
}

weather $@
